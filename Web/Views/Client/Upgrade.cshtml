@model Tuple<HubManPractices.Service.ViewModels.ClientViewModel, IEnumerable<HubManPractices.Service.ViewModels.OfficeSubscriptionViewModel>>

@{
    ViewBag.Title = "Upgrade";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@if(TempData["Upgrade Update Error"]!=null)
{
    <div class="alert alert-danger">@TempData["Upgrade Update Error"]</div>
}

@if (TempData["Upgrade Error"] != null)
{
    <div class="alert alert-danger">@TempData["Upgrade Error"]</div>
}


@{
    List<SelectListItem> select = new List<SelectListItem>();
    foreach (var item in Model.Item2)
    {
        select.Add(new SelectListItem
        {
            Text = item.SubscriptionName,
            Value = item.SubscriptionID.ToString()
        });
    }
}

<h2>Upgrade</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>ClientViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
           @Html.HiddenFor(m=>m.Item1.ClientID)
        </div>
        <div class="form-group">
            @Html.HiddenFor(m => m.Item1.ResellerID)
        </div>

        <div class="form-group">
            @Html.HiddenFor(m => m.Item1.ClientName)
        </div>
        <div class="form-group">
            @Html.HiddenFor(m => m.Item1.ContactMail)
        </div>
        <div class="form-group">
            @Html.HiddenFor(m => m.Item1.ContactName)
        </div>
        <div class="form-group">
            @Html.HiddenFor(m => m.Item1.ContactNumber)
        </div>
        <div class="form-group">
            @Html.HiddenFor(m => m.Item1.ContactTitle)
        </div>
        <div class="form-group">
            @Html.HiddenFor(m => m.Item1.Expiry)
        </div>

        <div class="form-group">
            @Html.Hidden("Status", "Activated")
        </div>

        @Html.LabelFor(m => m.Item1.NumberofLicenses)

        @foreach (var Sub in Model.Item2)
        {
            <div class="form-group">
                <div class="col-md-10">
                    @Html.DropDownList(Sub.MonthlyFee.ToString(), select)
                    @Html.TextBox(Sub.SubscriptionName, null, new { @type = "number" })
                </div>
            </div>
        }


        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index",new {ResellerID=Model.Item1.ResellerID})
</div>
